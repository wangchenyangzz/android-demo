apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "cn.yy.demo"
        minSdkVersion 18
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //google
    implementation "androidx.appcompat:appcompat:${getProperty('libs.androidx.appcompat')}"
    implementation "androidx.annotation:annotation:${getProperty('libs.androidx.annotation')}"
    implementation "androidx.lifecycle:lifecycle-extensions:${getProperty('libs.androidx.lifecycle')}"
    implementation "com.google.android.material:material:${getProperty('libs.google.material')}"
    implementation "androidx.constraintlayout:constraintlayout:${getProperty('libs.androidx.constraint-layout')}"
    implementation "androidx.viewpager2:viewpager2:${getProperty('libs.androidx.viewpager2')}"

    //retrofit2
    implementation "com.squareup.retrofit2:retrofit:${getProperty('libs.square.retrofit')}"
    implementation "com.squareup.retrofit2:converter-gson:${getProperty('libs.square.retrofit')}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${getProperty('libs.square.retrofit')}"

    //Dagger2
    implementation "com.google.dagger:dagger:${getProperty('libs.google.dagger')}"
    implementation "com.google.dagger:dagger-android:${getProperty('libs.google.dagger')}"
    implementation "com.google.dagger:dagger-android-support:${getProperty('libs.google.dagger')}"

    //okhttp
    implementation "com.squareup.okhttp3:okhttp:${getProperty('libs.square.okhttp')}"
    implementation "com.squareup.okhttp3:logging-interceptor:${getProperty('libs.square.okhttp')}"
}
